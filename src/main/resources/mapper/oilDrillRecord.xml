<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.longyan.distribution.mapper.OilDrillRecordMapper">

    <select id="selectById" resultType="com.longyan.distribution.domain.OilDrillRecord" parameterType="java.lang.Integer">
        select * from `oil_drill_record` where id= #{id} and `valid` = 1
    </select>

    <select id="select" resultType="com.longyan.distribution.domain.OilDrillRecord" parameterType="java.util.Map">
        select * from `oil_drill_record` where `valid` = 1
        <if test="id!=null">
            and `id` = #{id}
        </if>
    </select>
    <resultMap id="OilRecordAndCustomerList" type="com.longyan.distribution.domain.OilDrillRecord">
        <id property="id" column="OilDrillRecord_id"/>
        <result property="amount" column="OilDrillRecord_amount"/>
        <result property="createTime" column="OilDrillRecord_createTime"/>
        <result property="updateTime" column="OilDrillRecord_updateTime"/>
        <result property="status" column="OilDrillRecord_status"/>
        <result property="refuseReason" column="OilDrillRecord_refuseReason"/>
        <association property="customer" javaType="com.longyan.distribution.domain.Customer">
            <id property="id" column="customer_id"/>
            <result property="phone" column="phone"/>
            <result property="businessName" column="businessName"/>
            <result property="businessAccount" column="businessAccount"/>
            <result property="businessOilDrill" column="businessOilDrill"/>
        </association>
    </resultMap>

    <select id="selectOilRecordAndCustomerList" resultMap="OilRecordAndCustomerList" parameterType="java.util.Map">
        select
        a.`id` as OilDrillRecord_id,
        a.`amount` as OilDrillRecord_amount,
        a.`createTime` as OilDrillRecord_createTime,
        a.`status` as OilDrillRecord_status,
        a.`updateTime` as OilDrillRecord_updateTime,
        a.`refuseReason` as OilDrillRecord_refuseReason,
        b.`id` as customer_id,
        b.`phone`,
        b.`businessName`,
        b.`businessAccount`,
        b.`businessOilDrill`
        from `oil_drill_record` a LEFT join customer b on a.businessId = b.id  where a.`valid` = 1 and b.valid = 1
        <if test="type!=null">
            and a.`type` = #{type}
        </if>
        <if test="phone!=null">
            and (a.`customerPhone` like concat ('%',#{phone},'%'))
        </if>
        <if test="status!=null" >
            <if test="status==1 and type!=null and type==2">
                and (a.`status` = 1 or a.`status` = -1 or a.`status` = -2)
            </if>
            <if test="status!=1 ">
                and a.`status` = #{status}
            </if>
        </if>
        order by a.updateTime desc
        <if test="startIndex != null and pageSize != null">
            limit #{startIndex},#{pageSize}
        </if>
    </select>

    <select id="selectList" resultType="com.longyan.distribution.domain.OilDrillRecord" parameterType="java.util.Map">
        select * from `oil_drill_record` where `valid` = 1
        <if test="businessId!=null">
            and `businessId` = #{businessId}
        </if>
        <if test="customerId!=null">
            and `customerId` = #{customerId}
        </if>
        <if test="status!=null">
            and `status` = #{status}
        </if>
        <if test="type!=null">
            and `type` = #{type}
        </if>
        <if test="phone!=null">
            and (`customerPhone` like concat ('%',#{phone},'%'))
        </if>
        order by updateTime desc
        <if test="startIndex != null and pageSize != null">
            limit #{startIndex},#{pageSize}
        </if>
    </select>

    <select id="selectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from `oil_drill_record` where `valid` = 1
        <if test="businessId!=null">
            and `businessId` = #{businessId}
        </if>
        <if test="customerId!=null">
            and `customerId` = #{customerId}
        </if>
        <if test="type!=null">
            and `type` = #{type}
        </if>
        <if test="status!=null" >
            <if test="status==1 and type!=null and type==2">
                and (`status` = 1 or `status` = -1 or `status` = -2)
            </if>
            <if test="status!=1 ">
                and `status` = #{status}
            </if>
        </if>
        <if test="phone!=null">
            and (`customerPhone` like concat ('%',#{phone},'%'))
        </if>
        <if test="phone!=null">
            and (`customerPhone` like concat ('%',#{phone},'%'))
        </if>
    </select>

    <update id="updateStatus" parameterType="com.longyan.distribution.domain.OilDrillRecord">
        update `oil_drill_record` set
        `status` = #{status},
        `refuseReason` = #{refuseReason},
        `updateBy` = #{updateBy},
        `updateTime` = now()
        where `id` = #{id}
    </update>

    <insert id="insert" parameterType="com.longyan.distribution.domain.OilDrillRecord" useGeneratedKeys="true" keyProperty="id">
        insert into `oil_drill_record`
        (
        `customerId`,
        `businessId`,
        `amount`,
        `businessName`,
        `businessAccount`,
        `customerPhone`,
        `createBy`,
        <if test="status!=null">
        `status`,
        </if>
        `type`
        )
        values
        (
        #{customerId},
        #{businessId},
        #{amount},
        #{businessName},
        #{businessAccount},
        #{customerPhone},
        #{createBy},
        <if test="status!=null">
        #{status},
        </if>
        #{type}
        )
    </insert>

    <update id="update" parameterType="com.longyan.distribution.domain.OilDrillRecord">
        update `oil_drill_record` set
        `customerId` = #{customerId},
        `businessId` = #{businessId},
        `amount` = #{amount},
        `businessName` = #{businessName},
        `businessAccount` = #{businessAccount},
        `customerPhone` = #{customerPhone},
        `updateBy` = #{updateBy},
        `status` = #{status},
        `type` = #{type},
        `refuseReason` = #{refuseReason},
        `updateTime` = now()
        where `id` = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
        update `oil_drill_record` set valid = 0 where `id` = #{id}
    </delete>
</mapper>